{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [transactionApproval, setTransactionApproval] = useState({});\n  const setTransactionApprovalFunction = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    }); // Update local approval state\n\n    setTransactionApproval(prev => ({ ...prev,\n      [transactionId]: newValue\n    }));\n  }, [fetchWithoutCache]);\n  useEffect(() => {\n    if (transactions) {\n      // Initialize approval states for the current transactions\n      const initialApprovalState = {};\n      transactions.forEach(transaction => {\n        initialApprovalState[transaction.id] = transaction.approved;\n      });\n      setTransactionApproval(initialApprovalState);\n    }\n  }, [transactions]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      approved: transactionApproval[transaction.id] // Pass approval state\n      ,\n      setTransactionApproval: setTransactionApprovalFunction\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"ZIIho3qxM7nWOHLGvE53H5pe+P8=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useEffect","useState","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","transactionApproval","setTransactionApproval","setTransactionApprovalFunction","transactionId","newValue","value","prev","initialApprovalState","forEach","transaction","id","approved","map"],"sources":["/Users/sagarwagh/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { SetTransactionApprovalParams } from \"src/utils/types\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\";\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch();\n  const [transactionApproval, setTransactionApproval] = useState<{ [id: string]: boolean }>({});\n\n  const setTransactionApprovalFunction = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      });\n      // Update local approval state\n      setTransactionApproval((prev) => ({\n        ...prev,\n        [transactionId]: newValue,\n      }));\n    },\n    [fetchWithoutCache]\n  );\n\n  useEffect(() => {\n    if (transactions) {\n      // Initialize approval states for the current transactions\n      const initialApprovalState = {};\n      transactions.forEach(transaction => {\n        initialApprovalState[transaction.id] = transaction.approved;\n      });\n      setTransactionApproval(initialApprovalState);\n    }\n  }, [transactions]);\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>;\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          approved={transactionApproval[transaction.id]} // Pass approval state\n          setTransactionApproval={setTransactionApprovalFunction}\n        />\n      ))}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EACA,MAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAA4B,EAA5B,CAA9D;EAEA,MAAMS,8BAA8B,GAAGX,WAAW,CAChD,eAAuC;IAAA,IAAhC;MAAEY,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMN,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFK,aADoF;MAEpFE,KAAK,EAAED;IAF6E,CAA/D,CAAvB,CADqC,CAKrC;;IACAH,sBAAsB,CAAEK,IAAD,KAAW,EAChC,GAAGA,IAD6B;MAEhC,CAACH,aAAD,GAAiBC;IAFe,CAAX,CAAD,CAAtB;EAID,CAX+C,EAYhD,CAACN,iBAAD,CAZgD,CAAlD;EAeAN,SAAS,CAAC,MAAM;IACd,IAAIK,YAAJ,EAAkB;MAChB;MACA,MAAMU,oBAAoB,GAAG,EAA7B;MACAV,YAAY,CAACW,OAAb,CAAqBC,WAAW,IAAI;QAClCF,oBAAoB,CAACE,WAAW,CAACC,EAAb,CAApB,GAAuCD,WAAW,CAACE,QAAnD;MACD,CAFD;MAGAV,sBAAsB,CAACM,oBAAD,CAAtB;IACD;EACF,CATQ,EASN,CAACV,YAAD,CATM,CAAT;;EAWA,IAAIA,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACe,GAAb,CAAkBH,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEV,OAHX;MAIE,QAAQ,EAAEC,mBAAmB,CAACS,WAAW,CAACC,EAAb,CAJ/B,CAIiD;MAJjD;MAKE,sBAAsB,EAAER;IAL1B,GACOO,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA/CM;;GAAMd,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}